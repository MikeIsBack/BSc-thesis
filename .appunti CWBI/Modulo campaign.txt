==> Approccio MDA: l'architettura c'è e consente di sviluppare qualunque tipo di applicativo, lo sforzo si sposta tutto sulla fase di analisi e quindi sul "come farlo" rispetto al "farlo".


===============
MODULO CAMPAIGN
===============

ClienteDB(String nome, String descrizione, String partitaIva, String codiceFiscale)

ProgettoClienteDB(Long idClienteDB, String codice, String titolo, String descrizione, String statoAvanzamento, Integer percentualeAvanzamento, GregorianCalendar dataInizio) // es. codice "2022.70", statoAvanzamento={aperto,chiuso,sospeso}, idClienteDB sempre uguale a CWBI (cliente primario)

ProgettoCliente(ClienteDB clienteDB, List<ProgettoClienteDB> progettoClienteDBs)

CorrelazioneClienteDB(Long idClienteDB, Long idProgettoClienteDB) // relazione N:N, idClienteDB è un cliente secondario

OffertaDB(String codice, String descrizione, String stato, BigDecimal imponibile1, BigDecimal imponibile2, BigDecimal imponibile3, Long correlazioneClienteDB) // stato={in preparazione,in accettazione,accettata}


====
NOTE
====

- in ClienteFormAction utilizzo la tabella ProgettoClienteDB per memorizzare n volte gli n progetti che assegno al cliente (guardare ProgettoUserFormAction metodo execute())

- ProgettoCliente rappresenta la pagina di dettaglio di un singolo cliente, con annessi tutti i suoi progetti, se ce ne sono

- ODA --> identificativo cliente (ordine di acquisto)


========
WORKFLOW
========

ottengo i contatti del cliente --> associo il progetto --> creo l'offerta --> approvo l'offerta

richiesta da un cliente (ancora destrutturata, senza offerta definita ma solo con il progetto --> solo raccolta delle informazioni di contatto), la registro, associo il cliente ad un progetto (più progetti per più clienti N:N), passo poi alla preparazione dell'offerta.